"use strict";(self.webpackChunkbast_docu=self.webpackChunkbast_docu||[]).push([[4957],{640:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"structory/structure","title":"Structure","description":"What is a Structure?","source":"@site/docs/structory/structure.md","sourceDirName":"structory","slug":"/structory/structure","permalink":"/dadadocu/docs/structory/structure","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Structure"},"sidebar":"structorySidebar","previous":{"title":"Structory","permalink":"/dadadocu/docs/structory/intro"},"next":{"title":"Options","permalink":"/dadadocu/docs/category/options"}}');var s=r(4848),c=r(8453);const i={sidebar_position:1,title:"Structure"},o="Structure Configuration",d={},l=[{value:"What is a Structure?",id:"what-is-a-structure",level:2},{value:"How to Create a Structure In-Game",id:"how-to-create-a-structure-in-game",level:2},{value:"How Are Structures Loaded?",id:"how-are-structures-loaded",level:2},{value:"Field Explanation",id:"field-explanation",level:2}];function a(e){const t={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components},{Details:r}=t;return r||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"structure-configuration",children:"Structure Configuration"})}),"\n",(0,s.jsx)(t.h2,{id:"what-is-a-structure",children:"What is a Structure?"}),"\n",(0,s.jsxs)(t.p,{children:["A ",(0,s.jsx)(t.strong,{children:"structure"})," is a custom build that can be defined in your configuration files. It can include a layout, a central block, orientation, and optional effects like fireworks or particles. Structures are the core of this plugin."]}),"\n",(0,s.jsxs)(t.p,{children:["Each structure is loaded from the ",(0,s.jsx)(t.code,{children:"structures"})," folder. Every YAML file inside that folder can contain ",(0,s.jsx)(t.strong,{children:"multiple structures"}),", each defined as a top-level node."]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"how-to-create-a-structure-in-game",children:"How to Create a Structure In-Game"}),"\n",(0,s.jsxs)(t.p,{children:["Once a structure is correctly built in the world, players can ",(0,s.jsx)(t.strong,{children:"activate it"})," by sneaking and right-clicking (",(0,s.jsx)(t.code,{children:"Shift + Right Click"}),") on the ",(0,s.jsx)(t.strong,{children:"check-block"})," defined in the configuration."]}),"\n",(0,s.jsx)(t.p,{children:"If the structure matches the layout and orientation, and the check-block is valid, the plugin will:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Recognize the structure"}),"\n",(0,s.jsx)(t.li,{children:"Trigger any configured effects (e.g. fireworks, particles, sounds)"}),"\n"]}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"\ud83e\uddf1 Make sure the structure is complete and the player interacts with the correct block!"}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"how-are-structures-loaded",children:"How Are Structures Loaded?"}),"\n",(0,s.jsxs)(t.p,{children:["All structures are automatically loaded from the ",(0,s.jsx)(t.code,{children:"structures"})," directory.",(0,s.jsx)(t.br,{}),"\n","Each file in that folder can contain one or more structures, defined as separate root-level keys."]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Show YAML example"}),(0,s.jsxs)(t.p,{children:["For example, if you have a file called ",(0,s.jsx)(t.code,{children:"altars.yml"})," like this:"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:'elder_altar:\r\n  name: "Elder Altar"\r\n  check-block: CAULDRON\r\n  orientation: false #check only EAST orientation, perfect if the structure is symmetric\r\n  layout:\r\n  # layout definition\r\n  options:\r\n    fireworks:\r\n        type: RANDOM\r\n        amount: 5\r\n        power: 5\r\n        flicker: true\r\n        fade: PURPLE, BLACK, SILVER\r\n        colors: FUCHSIA, PURPLE, WHITE, BLACK\r\n\r\naltar_of_darkness:\r\n  name: "altar_of_darkness"\r\n  check-block: OBSIDIAN\r\n  main-block: "0 1 0"\r\n  orientation: false\r\n  layout:\r\n  # layout definition\n'})}),(0,s.jsxs)(t.p,{children:["Both ",(0,s.jsx)(t.code,{children:"altar_of_light"})," and ",(0,s.jsx)(t.code,{children:"altar_of_darkness"})," will be loaded as separate structures."]})]}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["Make sure each structure has a unique key and a valid ",(0,s.jsx)(t.code,{children:"name"})," field."]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"field-explanation",children:"Field Explanation"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Parameter"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Default"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{children:["*",(0,s.jsx)(t.code,{children:"name"})]}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Unique name of the structure"}),(0,s.jsx)(t.td,{children:"*"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"check-block"})}),(0,s.jsx)(t.td,{children:"Material"}),(0,s.jsxs)(t.td,{children:["Block used to validate the structure (e.g. ",(0,s.jsx)(t.code,{children:"STONE"}),", ",(0,s.jsx)(t.code,{children:"GLOWSTONE"}),")"]}),(0,s.jsx)(t.td,{children:"null"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"main-block"})}),(0,s.jsx)(t.td,{children:"Offset"}),(0,s.jsxs)(t.td,{children:["Offset from the center block, written as ",(0,s.jsx)(t.code,{children:'"x y z"'})," (e.g. ",(0,s.jsx)(t.code,{children:'"0 0 0"'}),")"]}),(0,s.jsx)(t.td,{children:"0 0 0"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"orientation"})}),(0,s.jsx)(t.td,{children:"Boolean"}),(0,s.jsxs)(t.td,{children:["Whether the structure can be validated on different orientations ",(0,s.jsx)(t.code,{children:"EAST"}),"by default"]}),(0,s.jsx)(t.td,{children:"false"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"options"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"../category/options",children:"Options"})}),(0,s.jsxs)(t.td,{children:["Extra effects or behaviors  ",(0,s.jsx)(t.a,{href:"../category/options",children:"Options"})]}),(0,s.jsx)(t.td,{children:"empty"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"layout"})}),(0,s.jsx)(t.td,{children:"Layout"}),(0,s.jsx)(t.td,{children:"Defines the shape and levels of the structure"}),(0,s.jsx)(t.td,{children:"empty"})]})]})]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.p,{children:["Need help designing your layout or choosing effects? Join the ",(0,s.jsx)(t.a,{href:"https://discord.gg/KBNDByfjuC",children:"Discord"})," and ask the community!"]})]})}function h(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>o});var n=r(6540);const s={},c=n.createContext(s);function i(e){const t=n.useContext(c);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(c.Provider,{value:t},e.children)}}}]);